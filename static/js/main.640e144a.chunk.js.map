{"version":3,"sources":["Components/Menu.js","Components/Cart.js","Containers/App.js","serviceWorker.js","index.js"],"names":["Menu","props","state","menuitem","this","menu","map","item","index","key","Item","className","sm","name","description","price","type","onClick","addToCart","Component","Cart","cart","removeFromCart","subtotal","App","bind","appetizers","dessert","setState","items","push","prevState","indexOf","splice","md","componentDidMount","rel","href","integrity","crossOrigin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6aAkDeA,E,YA1CP,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,sEAUT,IAAD,OACAC,EAAWC,KAAKH,MAAMI,KAAKC,KAAI,SAACC,EAAMC,GACtC,OAAO,kBAAC,IAAD,CAAWC,IAAKD,GACX,kBAAC,IAAUE,KAAX,CAAgBC,UAAU,iBACtB,kBAAC,IAAD,CAAKC,GAAI,GAAID,UAAU,aAClBJ,EAAKM,MAEV,kBAAC,IAAD,CAAKD,GAAI,GAAID,UAAU,oBAClBJ,EAAKO,aAEV,kBAAC,IAAD,CAAKH,UAAU,+DAA+DC,GAAI,IAAlF,IACEL,EAAKQ,MACP,4BAAQJ,UAAU,cAAcK,KAAK,SAASC,QAAS,kBAAM,EAAKhB,MAAMiB,UAAUX,KAAO,kBAAC,IAAD,aAM7G,OACI,8BACI,wBAAII,UAAU,4CAAd,QAGA,wBAAIA,UAAU,kBACTR,Q,GAnCFgB,a,gBCkCRC,G,kBApCP,WAAYnB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,GAFC,E,sEAOT,IAAD,OACAmB,EAAOjB,KAAKH,MAAMoB,KAAKf,KAAI,SAACC,EAAMC,GAAP,OAEf,kBAAC,IAAD,CAAKG,UAAU,4CAA4CF,IAAKD,GAExD,0BAAMG,UAAU,aACXJ,EAAKM,MAEV,0BAAMF,UAAU,cAAhB,IACMJ,EAAKQ,OAEf,4BAAQJ,UAAU,cAAcK,KAAK,SAASC,QAAS,kBAAM,EAAKhB,MAAMqB,eAAef,KAAvF,cAGpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKI,UAAU,uDAAsD,0CACpEU,EACD,kBAAC,IAAD,CAAKV,UAAU,2CAA0C,0CAAzD,IAA6EP,KAAKH,MAAMsB,e,GA1BrFJ,c,yBCoFRK,E,YA7EX,WAAYvB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPG,KAAK,GACLgB,KAAK,GACLE,SAAS,GAEb,EAAKL,UAAY,EAAKA,UAAUO,KAAf,gBACjB,EAAKH,eAAiB,EAAKA,eAAeG,KAApB,gBACtB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAVD,E,iFAgBdrB,KAAKwB,SAAS,CAACvB,KAFL,CAAC,CAACQ,KAAK,WAAYE,MAAM,GAAGD,YAAY,yMAAsM,CAACD,KAAK,gBAAiBE,MAAM,GAAID,YAAY,gKAAgK,CAACD,KAAK,gBAAiBE,MAAM,GAAID,YAAY,4NAAyN,CAACD,KAAK,uBAAmBE,MAAM,GAAKD,YAAY,qMAAqM,CAACD,KAAK,0BAA2BE,MAAM,GAAKD,YAAY,qH,gCAKl/BP,GACN,IAAIsB,EAAK,YAAOzB,KAAKF,MAAMmB,MAC3BQ,EAAMC,KAAKvB,GACXH,KAAKwB,UAAS,SAACG,EAAW9B,GAAZ,MAAsB,CAChCoB,KAAMQ,EAAON,SAAUQ,EAAUR,SAAWhB,EAAKQ,Y,qCAI1CR,GACf,IAAIsB,EAAK,YAAOzB,KAAKF,MAAMmB,MACvBb,EAAQqB,EAAMG,QAAQzB,GAC1BsB,EAAMI,OAAOzB,EAAO,GACpBJ,KAAKwB,UAAS,SAACG,EAAW9B,GAAZ,MAAsB,CAACoB,KAAMQ,EAAQN,SAAUQ,EAAUR,SAAWhB,EAAKQ,Y,mCAMvFX,KAAKwB,SAAS,CAACvB,KAFE,CAAC,CAACQ,KAAK,mBAAoBE,MAAM,EAAED,YAAY,oLAAoL,CAACD,KAAK,uBAAwBE,MAAM,EAAGD,YAAa,yHAAyH,CAACD,KAAK,oBAAqBE,MAAM,EAAGD,YAAY,oHAAoH,CAACD,KAAK,yBAA0BE,MAAM,EAAID,YAAY,wC,gCAQznBV,KAAKwB,SAAS,CAACvB,KAFD,CAAC,CAACQ,KAAK,iBAAkBE,MAAM,EAAED,YAAY,yMAAsM,CAACD,KAAK,+BAAgCE,MAAM,GAAID,YAAY,qK,+BAQrT,IAAD,OACP,OACM,kBAAC,IAAD,CAAWH,UAAU,kBACrB,kBAAC,IAAD,CAAKA,UAAU,+BAA8B,wBAAIA,UAAU,cAAd,WAC7C,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKuB,GAAI,EAAGvB,UAAU,QAClB,kBAAC,IAAD,CAAKA,UAAU,0BACX,4BAAQA,UAAU,YAAYK,KAAK,SAASC,QAAS,kBAAM,EAAKS,eAAhE,cACA,4BAAQf,UAAU,YAAYK,KAAK,SAASC,QAAS,kBAAM,EAAKkB,sBAAhE,UACA,4BAAQxB,UAAU,YAAYK,KAAK,SAASC,QAAS,kBAAM,EAAKU,YAAhE,YAEJ,kBAAC,EAAD,CAAMtB,KAAQD,KAAKF,MAAMG,KAAMa,UAAWd,KAAKc,aAEnD,kBAAC,IAAD,CAAKgB,GAAI,EAAGvB,UAAU,iCAClB,kBAAC,EAAD,CAAMU,KAAQjB,KAAKF,MAAMmB,KAAME,SAAYnB,KAAKF,MAAMqB,SAAUD,eAAkBlB,KAAKkB,mBAG3F,0BACEc,IAAI,aACJC,KAAK,wEACLC,UAAU,0EACVC,YAAY,mB,GAvERpB,aCEEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.640e144a.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"./../Css/Menu.css\"\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport {FaCartPlus} from \"react-icons/fa\"\n\n\n    class Menu extends Component {\n        constructor(props){\n            super(props);\n            this.state={\n\n\n            };\n        }\n\n\n\n        render(){\n            let menuitem = this.props.menu.map((item, index) => {\n                return <ListGroup key={index}>\n                            <ListGroup.Item className=\"border-0 pl-0\">\n                                <Col sm={12} className=\"item-name\">\n                                    {item.name}\n                                </Col>\n                                <Col sm={12} className=\"item-description\">\n                                    {item.description}\n                                </Col>\n                                <Col className=\"border-bottom d-flex justify-content-between align-items-end\" sm={12} >\n                                ${item.price}\n                                <button className=\"cart-button\" type=\"button\" onClick={() => this.props.addToCart(item)}><FaCartPlus /></button>\n                                </Col>\n\n                            </ListGroup.Item>\n                        </ListGroup>\n            });\n            return(\n                <main>\n                    <h2 className=\"title-menu d-flex justify-content-center\">\n                        Menu\n                    </h2>\n                    <ul className=\"menu-list pl-0\">\n                        {menuitem}\n                    </ul>\n                </main>\n            );\n        }\n    }\n\n\nexport default Menu;\n","import React, {Component} from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../Css/Cart.css\"\n    class Cart extends Component{\n        constructor(props){\n            super(props);\n            this.state = {\n\n            };\n        }\n\n        render(){\n            let cart = this.props.cart.map((item, index) => (\n\n                            <Row className=\"d-flex justify-content-between cart-items\" key={index}>\n\n                                    <span className=\"item-name\">\n                                        {item.name}\n                                    </span>\n                                    <span className=\"cart-price\">\n                                        ${item.price}\n                                    </span>\n                                <button className=\"cart-button\" type=\"button\" onClick={() => this.props.removeFromCart(item)}>Remove</button>\n                            </Row>\n                        ));\n            return(\n                <Col>\n                    <Row className=\"cart-title  cart-font d-flex justify-content-center\"><h2>Check-Out</h2></Row>\n                    {cart}\n                    <Row className=\"d-flex justify-content-center cart-font\"><p>Your Total:</p>${this.props.subtotal}</Row>\n                </Col>\n            )\n        }\n\n\n    }\n\n\n\n\nexport default Cart;\n","import React,{Component} from 'react';\nimport './../Css/App.css';\nimport Menu from  \"../Components/Menu\";\nimport Cart from \"./../Components/Cart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            menu:[],\n            cart:[],\n            subtotal:0\n        };\n        this.addToCart = this.addToCart.bind(this);\n        this.removeFromCart = this.removeFromCart.bind(this);\n        this.appetizers = this.appetizers.bind(this);\n        this.dessert = this.dessert.bind(this);\n    }\n\n    componentDidMount(){\n        let menu= [{name:\"Napoleon\", price:20,description:\"House-aged 1855 Black Angus filet mignon grilled to perfection layered with the perfect crab cake, rice pilaf, sofrito collard greens and a caramelized onion béarnaise sauce. Highly recommended.\"},{name:\"Barbie Basted\", price:10 ,description:\"Roasted chicken breast smothered with a brown sugar & chili barbecue sauce, caramelized onions and finished with smoked bacon collard greens and rice pilaf.\"},{name:\"Carpet Bagger\", price:56 ,description:\"House-aged 1855 Black Angus filet mignon grilled to perfection combined with hand breaded oysters fried golden, smoked bacon collard greens and garlic mashed potatoes. All finished with a spicy tarragon rémoulade.\"},{name:\"Just too good… \", price:25 , description:\"The perfect layered combination of Chipotle blackened sashimi grade tuna, warm goat cheese, roasted tomato chowchow, Sofrito style collard greens, rice pilaf and finished with a balsamic glaze.\"},{name:\"Pappardelle & Meatballs\", price:29 , description:\"Fresh pappardelle noodles, lamb meatballs, lamb ragout, rosemary infused mascarpone, lemon pin-nut gremolata\"}]\n\n        this.setState({menu: menu});\n    }\n\n    addToCart(item){\n        let items = [...this.state.cart];\n        items.push(item);\n        this.setState((prevState ,props)=> ({\n            cart: items, subtotal: prevState.subtotal + item.price\n        }));\n    }\n\n    removeFromCart(item){\n    let items = [...this.state.cart];\n    let index = items.indexOf(item);\n    items.splice(index, 1);\n    this.setState((prevState, props) =>({cart: items , subtotal: prevState.subtotal - item.price}));\n  }\n\n  appetizers(){\n    let appetizers = [{name:\"Smoke N' Jackets\", price:8,description:\"Potato skins stuffed with your choice of pulled pork, beef brisket, or smoked chicken, topped with BBQ sauce and cheddar cheese, then baked. Served with sour cream on the side.\"},{name:\"Fried Green Tomatoes\", price:6, description: \"Lightly dredged, fried up crisp and served with homemade horseradish-dijon sauce. Enough to make you stop and whistle\"},{name:\"Grilled Cue Shimp\", price:9, description:\"resh shrimp marinated in our own BBQ sauce, skewered and grilled over hickory and mesquite 'til they're sizzling\"},{name:\"Truffle Parmesan Fries\" ,price:7 , description:\"Parmesan,with white truffle oil\"}]\n\n    this.setState({menu: appetizers});\n  }\n\n  dessert(){\n      let dessert = [{name:\"New-York taste\", price:9,description:\"House-aged 1855 Black Angus filet mignon grilled to perfection layered with the perfect crab cake, rice pilaf, sofrito collard greens and a caramelized onion béarnaise sauce. Highly recommended.\"},{name:\"Barbie Basted Chicken Breast\", price:10 ,description:\"Roasted chicken breast smothered with a brown sugar & chili barbecue sauce, caramelized onions and finished with smoked bacon collard greens and rice pilaf.\"}]\n\n      this.setState({menu: dessert});\n  }\n\n\n\n\n    render() {\n      return (\n            <Container className=\"page-container\">\n            <Row className=\"mb-4 justify-content-center\"><h1 className=\"main-title\">ZAY's </h1></Row>\n            <Row>\n            <Col md={7} className=\"pl-0\">\n                <Row className=\"justify-content-around\">\n                    <button className=\"food-type\" type=\"button\" onClick={() => this.appetizers()}>appetizers</button>\n                    <button className=\"food-type\" type=\"button\" onClick={() => this.componentDidMount()}>Entree</button>\n                    <button className=\"food-type\" type=\"button\" onClick={() => this.dessert() }>Dessert</button>\n                </Row>\n                <Menu menu = {this.state.menu} addToCart={this.addToCart}/>\n            </Col>\n            <Col md={5} className=\"d-flex justify-content-center\">\n                <Cart cart = {this.state.cart} subtotal = {this.state.subtotal} removeFromCart = {this.removeFromCart}/>\n            </Col>\n            </Row>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n              integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n              crossOrigin=\"anonymous\"\n            />\n            </Container>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}